//! SeaORM Entity. Generated by sea-orm-codegen 0.5.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "buy_history")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: i32,
    pub price: i32,
    pub count: i32,
    pub time: DateTime,
    pub fourni_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::fourni::Entity",
        from = "Column::FourniId",
        to = "super::fourni::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Fourni,
    #[sea_orm(has_many = "super::items::Entity")]
    Items,
}

impl Related<super::fourni::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Fourni.def()
    }
}

impl Related<super::items::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Items.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
