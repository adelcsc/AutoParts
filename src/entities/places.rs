//! SeaORM Entity. Generated by sea-orm-codegen 0.5.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "places")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: i32,
    pub location: i32,
    pub col: Option<i32>,
    pub row: Option<i32>,
    pub up_down: Option<bool>,
    #[sea_orm(column_type = "Custom(\"BLOB\".to_owned())", nullable)]
    pub place: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::place_locations::Entity",
        from = "Column::Location",
        to = "super::place_locations::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    PlaceLocations,
    #[sea_orm(has_many = "super::place_item::Entity")]
    PlaceItem,
}

impl Related<super::place_locations::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PlaceLocations.def()
    }
}

impl Related<super::place_item::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PlaceItem.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
